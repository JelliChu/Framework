<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    >

    <Style TargetType="NavigationView">
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <!--<Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />-->
        <!--<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationView">

                    <Grid x:Name="RootGrid">
                        <!-- Button grid -->
                        <Grid
                            x:Name="PaneToggleButtonGrid"
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"
                            Canvas.ZIndex="100"
                            >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Grid
                                x:Name="TogglePaneTopPadding"
                                Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                />

                            <Grid
                                x:Name="ButtonHolderGrid"
                                Grid.Row="1"
                                Margin="{ThemeResource NavigationViewButtonHolderGridMargin}"
                                >
                                <Button
                                    x:Name="NavigationViewBackButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    IsEnabled="{TemplateBinding IsBackEnabled}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                    >
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="NavigationViewCloseButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top"
                                    >
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip" />
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="TogglePaneButton"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Center"
                                    AutomationProperties.LandmarkType="Navigation"
                                    FocusVisualMargin="0"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                    >
                                    <TextBlock
                                        x:Name="PaneTitleTextBlock"
                                        Grid.Column="0"
                                        Text="{TemplateBinding PaneTitle}"
                                        Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                                        Margin="0 -2 0 0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left"
                                        />
                                </Button>

                                <Grid
                                    x:Name="PaneTitleHolder"
                                    Height="40"
                                    Visibility="Collapsed"
                                    >
                                    <ContentControl
                                        x:Name="PaneTitlePresenter"
                                        Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />
                                </Grid>
                            </Grid>
                        </Grid>

                        <!-- Content layouts -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <Grid
                                x:Name="ShadowCaster"
                                Grid.RowSpan="2"
                                HorizontalAlignment="Left"
                                >
                                <!-- Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneWidth}" -->
                                <Grid.RenderTransform>
                                    <CompositeTransform x:Name="ShadowCasterTransform" />
                                </Grid.RenderTransform>
                            </Grid>

                            <!-- DisplayMode top -->
                            <StackPanel
                                x:Name="TopNavArea"
                                Grid.Row="0"
                                Background="{ThemeResource NavigationViewTopPaneBackground}"
                                VerticalAlignment="Top"
                                HorizontalAlignment="Stretch"
                                Canvas.ZIndex="1"
                                >

                                <Grid
                                    x:Name="TopNavTopPadding"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                    />

                                <Grid
                                    x:Name="TopNavGrid"
                                    BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                    Margin="{ThemeResource TopNavigationViewTopNavGridMargin}"
                                    Height="{ThemeResource NavigationViewTopPaneHeight}"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                    >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <!-- ^ MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}" -->
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>

                                    <Grid
                                        x:Name="TopNavLeftPadding"
                                        Grid.Column="1"
                                        Width="0"
                                        />

                                    <ContentControl
                                        x:Name="PaneHeaderOnTopPane"
                                        Grid.Column="2"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />

                                    <ContentControl
                                        x:Name="PaneTitleOnTopPane"
                                        Grid.Column="2"
                                        Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />

                                    <!-- Top nav ItemsRepeater -->
                                    <ItemsRepeaterScrollHost
                                        Grid.Column="3"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        >
                                        <ScrollViewer
                                            HorizontalScrollBarVisibility="Hidden"
                                            HorizontalScrollMode="Disabled"
                                            VerticalScrollBarVisibility="Hidden"
                                            VerticalScrollMode="Disabled"
                                            >
                                            <ItemsRepeater
                                                x:Name="TopNavMenuItemsHost"
                                                AutomationProperties.AccessibilityView="Content"
                                                AutomationProperties.LandmarkType="Navigation"
                                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                >
                                                <ItemsRepeater.Layout>
                                                    <StackLayout Orientation="Horizontal" />
                                                </ItemsRepeater.Layout>
                                            </ItemsRepeater>
                                        </ScrollViewer>
                                    </ItemsRepeaterScrollHost>

                                    <Button
                                        x:Name="TopNavOverflowButton"
                                        Grid.Column="4"
                                        Content="More"
                                        Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                        Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}"
                                        >

                                        <Button.Flyout>
                                            <Flyout
                                                ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}"
                                                Placement="BottomEdgeAlignedRight"
                                                >
                                                <Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0 -4 0 0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                                    <ScrollViewer
                                                                        x:Name="ScrollViewer"
                                                                        AutomationProperties.AccessibilityView="Raw"
                                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                        >
                                                                        <ContentPresenter
                                                                            x:Name="ContentPresenter"
                                                                            Content="{TemplateBinding Content}"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            CornerRadius="{TemplateBinding CornerRadius}"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                            />
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Flyout.FlyoutPresenterStyle>
                                                <ItemsRepeaterScrollHost>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                        <ItemsRepeater
                                                            x:Name="TopNavMenuItemsOverflowHost"
                                                            AutomationProperties.AccessibilityView="Content"
                                                            >
                                                            <ItemsRepeater.Layout>
                                                                <StackLayout />
                                                            </ItemsRepeater.Layout>
                                                        </ItemsRepeater>
                                                    </ScrollViewer>
                                                </ItemsRepeaterScrollHost>
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <ContentControl
                                        x:Name="PaneCustomContentOnTopPane"
                                        Grid.Column="5"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />

                                    <Grid
                                        x:Name="TopPaneAutoSuggestArea"
                                        Grid.Column="6"
                                        Height="{ThemeResource NavigationViewTopPaneHeight}"
                                        >

                                        <ContentControl
                                            x:Name="TopPaneAutoSuggestBoxPresenter"
                                            Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
                                            MinWidth="216"
                                            VerticalContentAlignment="Center"
                                            HorizontalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            />
                                    </Grid>

                                    <ContentControl
                                        x:Name="PaneFooterOnTopPane"
                                        Grid.Column="7"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        IsTabStop="False"
                                        />
                                    <!-- Top footer menu ItemsRepeater -->
                                    <ItemsRepeater
                                        x:Name="TopFooterMenuItemsHost"
                                        Grid.Column="8"
                                        AutomationProperties.AccessibilityView="Content"
                                        AutomationProperties.LandmarkType="Navigation"
                                        >
                                        <ItemsRepeater.Layout>
                                            <StackLayout Orientation="Horizontal" />
                                        </ItemsRepeater.Layout>
                                    </ItemsRepeater>

                                </Grid>
                                <Border
                                    x:Name="TopNavContentOverlayAreaGrid"
                                    Child="{TemplateBinding ContentOverlay}"
                                    />
                            </StackPanel>

                            <!-- Displaymode (compact/minimal/normal) left -->
                            <SplitView
                                x:Name="RootSplitView"
                                Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                BorderThickness="{ThemeResource NavigationViewBorderThickness}"
                                CornerRadius="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightCornerRadiusFilterConverter}}"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}"
                                >
                                <!-- OpenPaneLength="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OpenPaneWidth}" -->

                                <SplitView.Pane>
                                    <Grid
                                        x:Name="PaneContentGrid"
                                        BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                        Margin="{ThemeResource NavigationViewPaneContentGridMargin}"
                                        HorizontalAlignment="Left"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"
                                        >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="0" />
                                            <!-- above button margin + back button space -->
                                            <RowDefinition
                                                x:Name="PaneContentGridToggleButtonRow"
                                                Height="Auto"
                                                />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="0" />
                                            <!-- above list margin -->
                                            <RowDefinition
                                                x:Name="ItemsContainerRow"
                                                Height="*"
                                                />
                                        </Grid.RowDefinitions>

                                        <Grid
                                            x:Name="ContentPaneTopPadding"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                            />

                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="PaneHeaderContentBorderRow" />
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn" />
                                                <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ContentControl
                                                x:Name="PaneHeaderContentBorder"
                                                Grid.Column="2"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                IsTabStop="False"
                                                />
                                        </Grid>

                                        <Grid
                                            x:Name="AutoSuggestArea"
                                            Grid.Row="3"
                                            Margin="0 0 0 8"
                                            Height="{ThemeResource NavigationViewAutoSuggestAreaHeight}"
                                            VerticalAlignment="Center"
                                            >

                                            <ContentControl
                                                x:Name="PaneAutoSuggestBoxPresenter"
                                                Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                VerticalContentAlignment="Center"
                                                HorizontalContentAlignment="Stretch"
                                                IsTabStop="False"
                                                />

                                            <Button
                                                x:Name="PaneAutoSuggestButton"
                                                Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                                Visibility="Collapsed"
                                                >
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <ResourceDictionary.ThemeDictionaries>
                                                            <ResourceDictionary x:Key="Default">
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundPointerOver"
                                                                    ResourceKey="NavigationViewItemBackgroundPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundPressed"
                                                                    ResourceKey="NavigationViewItemBackgroundPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundDisabled"
                                                                    ResourceKey="NavigationViewItemBackgroundDisabled"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundPointerOver"
                                                                    ResourceKey="NavigationViewItemForegroundPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundPressed"
                                                                    ResourceKey="NavigationViewItemForegroundPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundDisabled"
                                                                    ResourceKey="NavigationViewItemForegroundDisabled"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushPointerOver"
                                                                    ResourceKey="NavigationViewItemBorderBrushPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushPressed"
                                                                    ResourceKey="NavigationViewItemBorderBrushPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushDisabled"
                                                                    ResourceKey="NavigationViewItemBorderBrushDisabled"
                                                                    />
                                                            </ResourceDictionary>
                                                            <ResourceDictionary x:Key="Light">
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundPointerOver"
                                                                    ResourceKey="NavigationViewItemBackgroundPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundPressed"
                                                                    ResourceKey="NavigationViewItemBackgroundPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBackgroundDisabled"
                                                                    ResourceKey="NavigationViewItemBackgroundDisabled"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundPointerOver"
                                                                    ResourceKey="NavigationViewItemForegroundPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundPressed"
                                                                    ResourceKey="NavigationViewItemForegroundPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonForegroundDisabled"
                                                                    ResourceKey="NavigationViewItemForegroundDisabled"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushPointerOver"
                                                                    ResourceKey="NavigationViewItemBorderBrushPointerOver"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushPressed"
                                                                    ResourceKey="NavigationViewItemBorderBrushPressed"
                                                                    />
                                                                <StaticResource
                                                                    x:Key="ButtonBorderBrushDisabled"
                                                                    ResourceKey="NavigationViewItemBorderBrushDisabled"
                                                                    />
                                                            </ResourceDictionary>
                                                        </ResourceDictionary.ThemeDictionaries>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                            </Button>
                                        </Grid>

                                        <ContentControl
                                            x:Name="PaneCustomContentBorder"
                                            Grid.Row="4"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            IsTabStop="False"
                                            />

                                        <!-- "Non header" content -->
                                        <Grid
                                            x:Name="ItemsContainerGrid"
                                            Grid.Row="6"
                                            >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <!-- MenuItems -->
                                                <RowDefinition Height="Auto" />
                                                <!-- Separator if overflow -->
                                                <RowDefinition Height="Auto" />
                                                <!-- PaneFooter -->
                                                <RowDefinition Height="Auto" />
                                                <!-- FooterItems -->
                                            </Grid.RowDefinitions>

                                            <!-- MenuItems -->
                                            <ItemsRepeaterScrollHost
                                                VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"
                                                >
                                                <ScrollViewer
                                                    x:Name="MenuItemsScrollViewer"
                                                    TabNavigation="Local"
                                                    VerticalScrollBarVisibility="Auto"
                                                    >
                                                    <!-- Left nav ItemsRepeater -->
                                                    <ItemsRepeater
                                                        x:Name="MenuItemsHost"
                                                        AutomationProperties.AccessibilityView="Content"
                                                        AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                        >
                                                        <ItemsRepeater.Layout>
                                                            <StackLayout />
                                                        </ItemsRepeater.Layout>
                                                    </ItemsRepeater>
                                                </ScrollViewer>
                                            </ItemsRepeaterScrollHost>

                                            <NavigationViewItemSeparator
                                                x:Name="VisualItemsSeparator"
                                                Grid.Row="1"
                                                Margin="0 0 0 2"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Stretch"
                                                Visibility="Collapsed"
                                                />

                                            <!-- PaneFooter -->
                                            <ContentControl
                                                x:Name="FooterContentBorder"
                                                Grid.Row="2"
                                                Margin="0 0 0 4"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                IsTabStop="False"
                                                />

                                            <!-- FooterItems -->
                                            <ItemsRepeaterScrollHost Grid.Row="3">
                                                <ScrollViewer
                                                    x:Name="FooterItemsScrollViewer"
                                                    VerticalAnchorRatio="1"
                                                    VerticalScrollBarVisibility="Auto"
                                                    >
                                                    <ItemsRepeater
                                                        x:Name="FooterMenuItemsHost"
                                                        AutomationProperties.AccessibilityView="Content"
                                                        >
                                                        <ItemsRepeater.Layout>
                                                            <StackLayout />
                                                        </ItemsRepeater.Layout>
                                                    </ItemsRepeater>
                                                </ScrollViewer>
                                            </ItemsRepeaterScrollHost>
                                        </Grid>
                                    </Grid>
                                </SplitView.Pane>

                                <SplitView.Content>
                                    <Grid
                                        x:Name="ContentGrid"
                                        Background="{ThemeResource NavigationViewContentBackground}"
                                        BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}"
                                        BorderThickness="{ThemeResource NavigationViewContentGridBorderThickness}"
                                        CornerRadius="{ThemeResource NavigationViewContentGridCornerRadius}"
                                        Margin="{ThemeResource NavigationViewContentMargin}"
                                        >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <Grid
                                            x:Name="ContentTopPadding"
                                            Grid.ColumnSpan="2"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"
                                            />

                                        <Grid
                                            x:Name="ContentLeftPadding"
                                            Grid.Row="1"
                                            />

                                        <ContentControl
                                            x:Name="HeaderContent"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            Content="{TemplateBinding Header}"
                                            Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"
                                            MinHeight="{StaticResource PaneToggleButtonHeight}"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            IsTabStop="False"
                                            />

                                        <ContentPresenter
                                            x:Name="ContentPresenter"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Content}"
                                            Margin="{ThemeResource NavigationViewContentPresenterMargin}"
                                            AutomationProperties.LandmarkType="Main"
                                            />
                                    </Grid>
                                </SplitView.Content>
                            </SplitView>

                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <VisualState x:Name="Compact" />

                                <VisualState x:Name="Expanded" />

                                <VisualState x:Name="Minimal">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource NavigationViewMinimalHeaderMargin}" Target="HeaderContent.Margin" />
                                        <Setter Value="{ThemeResource NavigationBackButtonSmallStyle}" Target="NavigationViewBackButton.Style" />
                                        <Setter Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" Target="ContentGrid.BorderThickness" />
                                        <Setter Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" Target="ContentGrid.CornerRadius" />
                                        <!--<Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />-->
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TopNavigationMinimal">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource TopNavigationViewContentGridBorderThickness}" Target="ContentGrid.BorderThickness" />
                                        <Setter Value="{ThemeResource TopNavigationViewContentGridCornerRadius}" Target="ContentGrid.CornerRadius" />
                                        <Setter Value="{ThemeResource TopNavigationViewContentMargin}" Target="ContentGrid.Margin" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="MinimalWithBackButton">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource NavigationViewMinimalHeaderMargin}" Target="HeaderContent.Margin" />
                                        <Setter Value="{ThemeResource NavigationBackButtonSmallStyle}" Target="NavigationViewBackButton.Style" />
                                        <Setter Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" Target="ContentGrid.BorderThickness" />
                                        <Setter Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" Target="ContentGrid.CornerRadius" />
                                        <!--<Setter Target="ContentGrid.Margin" Value="{ThemeResource NavigationViewMinimalContentMargin}" />-->
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                                <VisualState x:Name="TogglePaneButtonVisible">
                                    <VisualState.Setters>
                                        <!-- Might not need this setter when all the margins/paddings will be adequately set. -->
                                        <!-- This MinHeight setter is only here to ensure that AutoSuggestBox doesn't draw over ToggleButton. -->
                                        <Setter Value="{StaticResource NavigationViewPaneHeaderRowMinHeight}" Target="PaneContentGridToggleButtonRow.MinHeight" />
                                        <Setter Value="{ThemeResource NavigationViewItemInnerHeaderMargin}" Target="PaneTitlePresenter.Margin" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Value="Collapsed" Target="HeaderContent.Visibility" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <VisualState.Setters>
                                        <Setter Value="Collapsed" Target="AutoSuggestArea.Visibility" />
                                        <Setter Value="Collapsed" Target="TopPaneAutoSuggestArea.Visibility" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <VisualState.Setters>
                                        <Setter Value="Collapsed" Target="PaneAutoSuggestBoxPresenter.Visibility" />
                                        <Setter Value="Visible" Target="PaneAutoSuggestButton.Visibility" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <VisualState x:Name="ListSizeFull" />
                                <VisualState x:Name="ListSizeCompact">
                                    <VisualState.Setters>
                                        <Setter Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" Target="PaneContentGrid.Width" />
                                        <Setter Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" Target="ShadowCaster.Width" />
                                        <Setter Value="Collapsed" Target="PaneTitleTextBlock.Visibility" />
                                        <Setter Value="Collapsed" Target="PaneHeaderContentBorder.Visibility" />
                                        <Setter Value="Left" Target="PaneCustomContentBorder.HorizontalAlignment" />
                                        <Setter Value="Left" Target="FooterContentBorder.HorizontalAlignment" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneOverlayGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        From="PaneNotOverlaying"
                                        To="PaneOverlaying"
                                        >
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCasterTransform"
                                                Storyboard.TargetProperty="TranslateX"
                                                >
                                                <DiscreteDoubleKeyFrame
                                                    Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}"
                                                    KeyTime="0"
                                                    />
                                                <SplineDoubleKeyFrame
                                                    Value="0"
                                                    KeySpline="0.1,0.9 0.2,1.0"
                                                    KeyTime="0:0:0.35"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCaster"
                                                Storyboard.TargetProperty="Opacity"
                                                >
                                                <LinearDoubleKeyFrame
                                                    Value="1"
                                                    KeyTime="0:0:0.35"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCaster"
                                                Storyboard.TargetProperty="HorizontalAlignment"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="Left"
                                                    KeyTime="0"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition
                                        From="PaneOverlaying"
                                        To="PaneNotOverlaying"
                                        >
                                        <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCasterTransform"
                                                Storyboard.TargetProperty="TranslateX"
                                                >
                                                <DiscreteDoubleKeyFrame
                                                    Value="0"
                                                    KeyTime="0"
                                                    />
                                                <SplineDoubleKeyFrame
                                                    Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}"
                                                    KeySpline="0.1,0.9 0.2,1.0"
                                                    KeyTime="0:0:0.12"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCaster"
                                                Storyboard.TargetProperty="Opacity"
                                                >
                                                <LinearDoubleKeyFrame
                                                    Value="0"
                                                    KeyTime="0:0:0.12"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="ShadowCaster"
                                                Storyboard.TargetProperty="HorizontalAlignment"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="Left"
                                                    KeyTime="0"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PaneOverlaying" />
                                <VisualState x:Name="PaneNotOverlaying">
                                    <VisualState.Setters>
                                        <Setter Value="Transparent" Target="RootSplitView.BorderBrush" />
                                        <Setter Value="0" Target="ShadowCaster.Opacity" />
                                        <Setter Value="{ThemeResource NavigationViewExpandedPaneBackground}" Target="RootSplitView.PaneBackground" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <VisualState.Setters>
                                        <Setter Value="0,32,0,0" Target="PaneContentGrid.Margin" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" Target="TopNavOverflowButton.Style" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Value="0" Target="BackButtonPlaceholderOnTopNav.Width" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <VisualState.Setters>
                                        <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                        <!-- write it here and interfere. But these values work together to hide -->
                                        <!-- the left pane. -->
                                        <Setter Value="0" Target="RootSplitView.CompactPaneLength" />
                                        <Setter Value="0" Target="ShadowCaster.Width" />
                                        <Setter Value="Collapsed" Target="PaneToggleButtonGrid.Visibility" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneSeparatorStates">
                                <VisualState x:Name="SeparatorCollapsed" />
                                <VisualState x:Name="SeparatorVisible">
                                    <VisualState.Setters>
                                        <Setter Value="Visible" Target="VisualItemsSeparator.Visibility" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="NavigationViewItemPresenter" x:Key="MUX_NavigationViewItemPresenterStyleWhenOnTopPane">
        <Setter Property="Foreground" Value="{ThemeResource TopNavigationViewItemForeground}" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItemPresenter">
                    <Grid
                        x:Name="LayoutRoot"
                        Background="{TemplateBinding Background}"
                        Control.IsTemplateFocusTarget="True"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        >
                        <Grid.Resources />

                        <Rectangle
                            x:Name="PointerRectangle"
                            Fill="Transparent"
                            Visibility="Collapsed"
                            />

                        <Grid x:Name="ContentGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Viewbox
                                x:Name="IconBox"
                                Height="16"
                                Width="16"
                                Margin="12 0 0 0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                >
                                <ContentPresenter
                                    x:Name="Icon"
                                    Content="{TemplateBinding Icon}"
                                    Foreground="{TemplateBinding Foreground}"
                                    local:AnimatedIcon.State="Normal"
                                    xmlns:local="using:Microsoft.UI.Xaml.Controls"
                                    />
                            </Viewbox>

                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Column="1"
                                Margin="{ThemeResource TopNavigationViewItemContentPresenterMargin}"
                                TextWrapping="NoWrap"
                                Foreground="{TemplateBinding Foreground}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                VerticalAlignment="Center"
                                AutomationProperties.AccessibilityView="Raw"
                                />

    -->
    <!--<Grid x:Name="ExpandCollapseChevron" Grid.Column="2" Visibility="Collapsed" HorizontalAlignment="Right" Width="40" Margin="{ThemeResource TopNavigationViewItemExpandChevronMargin}" Background="Transparent">
                                <controls:AnimatedIcon Width="12" Height="12" RenderTransformOrigin="0.5, 0.5" x:Name="ExpandCollapseChevronIcon" HorizontalAlignment="Center" VerticalAlignment="Center" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="NormalOff" xmlns:local="using:Microsoft.UI.Xaml.Controls">
                                    <animatedvisuals:AnimatedChevronUpDownSmallVisualSource />
                                    <controls:AnimatedIcon.FallbackIconSource>
                                        <controls:FontIconSource Foreground="{ThemeResource NavigationViewItemForeground}" FontSize="{ThemeResource NavigationViewItemExpandedGlyphFontSize}" Glyph="{StaticResource NavigationViewItemExpandedGlyph}" FontFamily="{StaticResource SymbolThemeFontFamily}" />
                                    </controls:AnimatedIcon.FallbackIconSource>
                                    <controls:AnimatedIcon.RenderTransform />
                                </controls:AnimatedIcon>
                            </Grid>-->
    <!--
                        </Grid>

    -->
    <!--<Grid
                            x:Name="SelectionIndicatorGrid"
                            Margin="16 0 16 4"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Center"
                            >
                            <Rectangle
                                x:Name="SelectionIndicator"
                                Height="3"
                                Width="16"
                                Fill="{ThemeResource NavigationViewSelectionIndicatorForeground}"
                                Opacity="0"
                                RadiusX="2"
                                RadiusY="2"
                                />
                        </Grid>-->
    <!--

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PointerStates">
                                <VisualState x:Name="Normal" />

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPointerOver}" />
    -->
    <!--<Setter Target="ContentPresenter.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />-->
    <!--<Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundPressed}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
    -->
    <!--<Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Selected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelected}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelected}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelected}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PointerOverSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPointerOver}" />
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
    -->
    <!--<Setter Target="Icon.(controls:AnimatedIcon.State)" Value="PointerOver" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PressedSelected">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Background" Value="{ThemeResource TopNavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="PointerRectangle.Fill" Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}" />
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundSelectedPressed}" />
    -->
    <!--<Setter Target="Icon.(controls:AnimatedIcon.State)" Value="Pressed" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisabledStates">
                                <VisualState x:Name="Enabled" />

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="Icon.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TopNavigationViewItemForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                            <VisualStateGroup x:Name="NavigationViewIconPositionStates">
                                <VisualState x:Name="IconOnLeft" />
                                <VisualState x:Name="IconOnly">
                                    <VisualState.Setters>
                                        <Setter Target="LayoutRoot.Width" Value="36" />
                                        <Setter Target="LayoutRoot.Height" Value="36" />
                                        <Setter Target="LayoutRoot.Margin" Value="2" />
                                        <Setter Target="IconBox.Margin" Value="10,0" />
                                        <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
    -->
    <!--<Setter Target="SelectionIndicatorGrid.Margin" Value="0" />-->
    <!--<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemIconOnlyExpandChevronMargin}" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ContentOnly">
                                    <VisualState.Setters>
                                        <Setter Target="IconBox.Visibility" Value="Collapsed" />
                                        <Setter Target="ContentPresenter.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyContentPresenterMargin}" />
    -->
    <!--<Setter Target="SelectionIndicatorGrid.Margin" Value="12,0,12,4" />-->
    <!--<Setter Target="ExpandCollapseChevron.Margin" Value="{ThemeResource TopNavigationViewItemContentOnlyExpandChevronMargin}" />-->
    <!--
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
    -->
    <!--<VisualStateGroup x:Name="ChevronStates">
                                <VisualState x:Name="ChevronHidden" />
                                <VisualState x:Name="ChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevron.Visibility" Value="Visible" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>-->
    <!--<VisualStateGroup x:Name="PointerChevronStates">
                                <VisualState x:Name="NormalChevronHidden" />
                                <VisualState x:Name="NormalChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="NormalOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PointerOverOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronHidden">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleOpen">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOn" />

                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PressedChevronVisibleClosed">
                                    <VisualState.Setters>
                                        <Setter Target="ExpandCollapseChevronIcon.(controls:AnimatedIcon.State)" Value="PressedOff" />

                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>-->
    <!--

                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="NavigationViewItem">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemForeground}" />
        <Setter Property="Background" Value="{ThemeResource NavigationViewItemBackground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource NavigationViewItemBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource NavigationViewItemBorderThickness}" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="Margin" Value="{ThemeResource NavigationViewItemMargin}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItem">
                    <Grid x:Name="NVIRootGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <FlyoutBase.AttachedFlyout>
                            <Flyout
                                x:Name="ChildrenFlyout"
                                Placement="RightEdgeAlignedTop"
                                >
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="Padding" Value="{ThemeResource NavigationViewItemChildrenMenuFlyoutPadding}" />
                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                        <Setter Property="Margin" Value="0 -4 0 0" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                    <ScrollViewer
                                                        x:Name="ScrollViewer"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                        >
                                                        <ContentPresenter
                                                            x:Name="ContentPresenter"
                                                            Content="{TemplateBinding Content}"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            CornerRadius="{TemplateBinding CornerRadius}"
                                                            Padding="{TemplateBinding Padding}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                            />
                                                    </ScrollViewer>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid x:Name="FlyoutRootGrid">
                                    <Grid x:Name="FlyoutContentGrid" />
                                </Grid>
                            </Flyout>
                        </FlyoutBase.AttachedFlyout>

                        <NavigationViewItemPresenter
                            x:Name="NavigationViewItemPresenter"
                            Content="{TemplateBinding Content}"
                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            Control.IsTemplateFocusTarget="True"
                            Icon="{TemplateBinding Icon}"
                            IsTabStop="false"
                            UseSystemFocusVisuals="{TemplateBinding UseSystemFocusVisuals}"
                            >
                            <!-- InfoBadge="{TemplateBinding InfoBadge}" -->
                        </NavigationViewItemPresenter>
                        <ItemsRepeater
                            x:Name="NavigationViewItemMenuItemsHost"
                            x:Load="False"
                            Grid.Row="1"
                            Visibility="Collapsed"
                            >
                            <ItemsRepeater.Layout>
                                <StackLayout Orientation="Vertical" />
                            </ItemsRepeater.Layout>
                        </ItemsRepeater>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ItemOnNavigationViewListPositionStates">
                                <VisualState x:Name="OnLeftNavigation">
                                    <VisualState.Setters>
                                        <Setter Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnLeftPane}" Target="NavigationViewItemPresenter.Style" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationPrimary">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource TopNavigationViewItemMargin}" Target="NavigationViewItemPresenter.Margin" />
                                        <Setter Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPane}" Target="NavigationViewItemPresenter.Style" />
                                        <Setter Value="BottomEdgeAlignedLeft" Target="ChildrenFlyout.Placement" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OnTopNavigationOverflow">
                                    <VisualState.Setters>
                                        <Setter Value="{StaticResource MUX_NavigationViewItemPresenterStyleWhenOnTopPaneOverflow}" Target="NavigationViewItemPresenter.Style" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="primitives:NavigationViewItemPresenter" />-->

    <Style TargetType="NavigationViewItemHeader">
        <Setter Property="Foreground" Value="{ThemeResource NavigationViewItemHeaderForeground}" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="NavigationViewItemHeader">
                    <Grid x:Name="NavigationViewItemHeaderRootGrid">
                        <Grid
                            x:Name="InnerHeaderGrid"
                            Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
                            Height="40"
                            HorizontalAlignment="Left"
                            >
                            <TextBlock
                                x:Name="HeaderText"
                                Text="{TemplateBinding Content}"
                                Style="{StaticResource NavigationViewItemHeaderTextStyle}"
                                TextWrapping="NoWrap"
                                Margin="0 -1 0 -1"
                                VerticalAlignment="Center"
                                />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="PaneStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition
                                        From="HeaderTextCollapsed"
                                        To="HeaderTextVisible"
                                        >
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="InnerHeaderGrid"
                                                Storyboard.TargetProperty="Height"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="40"
                                                    KeyTime="0:0:0"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="HeaderText"
                                                Storyboard.TargetProperty="Visibility"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="Visible"
                                                    KeyTime="0:0:0"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="HeaderText"
                                                Storyboard.TargetProperty="Opacity"
                                                >
                                                <LinearDoubleKeyFrame
                                                    Value="0.0"
                                                    KeyTime="0:0:0"
                                                    />
                                                <LinearDoubleKeyFrame
                                                    Value="0.0"
                                                    KeyTime="0:0:0.1"
                                                    />
                                                <SplineDoubleKeyFrame
                                                    Value="1.0"
                                                    KeySpline="0.0,0.35 0.15,1.0"
                                                    KeyTime="0:0:0.2"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>

                                    <VisualTransition
                                        From="HeaderTextVisible"
                                        To="HeaderTextCollapsed"
                                        >
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="InnerHeaderGrid"
                                                Storyboard.TargetProperty="Height"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="0"
                                                    KeyTime="0:0:0"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>

                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetName="HeaderText"
                                                Storyboard.TargetProperty="Visibility"
                                                >
                                                <DiscreteObjectKeyFrame
                                                    Value="Collapsed"
                                                    KeyTime="0:0:0.2"
                                                    />
                                            </ObjectAnimationUsingKeyFrames>

                                            <DoubleAnimationUsingKeyFrames
                                                Storyboard.TargetName="HeaderText"
                                                Storyboard.TargetProperty="Opacity"
                                                >
                                                <LinearDoubleKeyFrame
                                                    Value="1.0"
                                                    KeyTime="0:0:0"
                                                    />
                                                <SplineDoubleKeyFrame
                                                    Value="0.0"
                                                    KeySpline="0.0,0.35 0.15,1.0"
                                                    KeyTime="0:0:0.1"
                                                    />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>

                                <VisualState x:Name="HeaderTextVisible" />
                                <VisualState x:Name="HeaderTextCollapsed">
                                    <VisualState.Setters>
                                        <Setter Value="Collapsed" Target="HeaderText.Visibility" />
                                        <Setter Value="0" Target="InnerHeaderGrid.Height" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="DisplayModeStates">
                                <VisualState x:Name="LeftMode" />
                                <VisualState x:Name="TopMode">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource TopNavigationViewItemInnerHeaderMargin}" Target="InnerHeaderGrid.Margin" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="NavigationViewItemSeparator">
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="AutomationProperties.AccessibilityView" Value="Raw" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="NavigationViewItemSeparatorRootGrid">
                        <Rectangle
                            x:Name="SeparatorLine"
                            Margin="{ThemeResource NavigationViewItemSeparatorMargin}"
                            Height="{ThemeResource NavigationViewItemSeparatorHeight}"
                            Fill="{ThemeResource NavigationViewItemSeparatorForeground}"
                            />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="NavigationSeparatorLineStates">
                                <VisualState x:Name="HorizontalLine" />
                                <VisualState x:Name="HorizontalLineCompact">
                                    <VisualState.Setters>
                                        <Setter Value="{ThemeResource NavigationViewCompactItemSeparatorMargin}" Target="SeparatorLine.Margin" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="VerticalLine">
                                    <VisualState.Setters>
                                        <Setter Value="24" Target="SeparatorLine.Height" />
                                        <Setter Value="{ThemeResource TopNavigationViewItemSeparatorWidth}" Target="SeparatorLine.Width" />
                                        <Setter Value="{ThemeResource TopNavigationViewItemSeparatorMargin}" Target="SeparatorLine.Margin" />
                                        <Setter Value="Center" Target="SeparatorLine.VerticalAlignment" />
                                        <Setter Value="{ThemeResource TopNavigationViewItemSeparatorForeground}" Target="SeparatorLine.Fill" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
